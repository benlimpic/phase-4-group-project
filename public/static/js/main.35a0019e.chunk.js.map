{"version":3,"sources":["styles/Box.js","styles/Button.js","styles/FormField.js","styles/Input.js","styles/Label.js","styles/Textarea.js","styles/Error.js","styles/Select.js","components/NavBar.js","components/LoginForm.js","components/SignUpForm.js","pages/Login.js","components/KanBan.jsx","components/CreateForm.js","pages/Create.js","components/CreateProject.js","pages/NewProject.js","components/DeleteProject.jsx","pages/DeleteProjectPage.js","components/DeleteTask.jsx","pages/DeleteTaskPage.js","App.js","reportWebVitals.js","index.js"],"names":["styled","div","COLORS","primary","secondary","ButtonBase","button","FillButton","OutlineButton","Button","Component","variant","color","props","style","FormField","Input","input","Label","label","Textarea","textarea","Wrapper","Alert","span","Message","p","Error","children","Select","select","header","Logo","h1","Nav","nav","NavBar","user","setUser","React","useState","isShow","setIsShow","isMinus","setIsMinus","className","to","onClick","as","Link","icon","size","fetch","method","then","r","ok","LoginForm","onLogin","username","setUsername","password","setPassword","errors","setErrors","isLoading","setIsLoading","onSubmit","e","preventDefault","headers","body","JSON","stringify","json","err","console","log","error","htmlFor","type","id","autoComplete","value","onChange","target","map","SignUpForm","passwordConfirmation","setPasswordConfirmation","imageUrl","setImageUrl","bio","setBio","password_confirmation","image_url","rows","section","Divider","hr","Login","showLogin","setShowLogin","KanBan","kanbanData","setKanbanData","useEffect","res","data","keyField","dataSource","dataSourceChanged","state","requestType","changedRecords","deletedRecords","cardSettings","contentField","headerField","priority","grabberField","swimlaneSettings","showEmptyRow","headerText","CreateForm","title","setTitle","status","setStatus","summary","setSummary","setPriority","projects","setProjects","projectNames","setProjectNames","navigate","useNavigate","projectOptions","project","task","user_id","project_id","required","Create","CreateProject","setColor","NewProject","DeleteProject","taskNames","setTaskNames","DeleteProjectPage","DeleteTask","DeleteTaskPage","registerLicense","App","path","exact","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"iUAEYA,IAAOC,IAAV,iK,4CCAHC,EAAS,CACbC,QAAS,CACP,SAAU,QACV,WAAY,aAEdC,UAAW,CACT,SAAU,YACV,WAAY,UAehB,I,cAAMC,EAAaL,IAAOM,OAAV,mMAUVC,EAAaP,YAAOK,EAAPL,CAAH,8HASVQ,EAAgBR,YAAOK,EAAPL,CAAH,2KAUJS,EAxCf,YAAoE,IAC9DC,EAD6D,IAAjDC,eAAiD,MAAvC,OAAuC,MAA/BC,aAA+B,MAAvB,UAAuB,EAATC,EAAS,iBAQjE,MANgB,SAAZF,EACFD,EAAYH,EACS,YAAZI,IACTD,EAAYF,GAGP,cAACE,EAAD,aAAWI,MAAOZ,EAAOU,IAAYC,KCb/BE,EANGf,IAAOC,IAAV,mFCYAe,EAZDhB,IAAOiB,MAAV,0OCQIC,EARDlB,IAAOmB,MAAV,kICaIC,EAbEpB,IAAOqB,SAAV,2PCSd,I,QAAMC,EAAUtB,IAAOC,IAAV,4LAWPsB,EAAQvB,IAAOwB,KAAV,kLAULC,EAAUzB,IAAO0B,EAAV,0CAIEC,EAlCf,YAA8B,IAAbC,EAAY,EAAZA,SACf,OACE,eAACN,EAAD,WACE,cAACC,EAAD,gBACA,cAACE,EAAD,UAAUG,QCQDC,EAZA7B,IAAO8B,OAAV,0O,gBC2DZ,IAAMR,EAAUtB,IAAO+B,OAAV,mHAOPC,EAAOhC,IAAOiC,GAAV,2MAaJC,EAAMlC,IAAOmC,IAAV,iGAOMC,EA9Ef,YAAmC,EAAjBC,KAAkB,IAAZC,EAAW,EAAXA,QAStB,EAA4BC,IAAMC,UAAS,GAA3C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BH,IAAMC,UAAS,GAA7C,mBAAOG,EAAP,KAAgBC,EAAhB,KAEA,OACE,qBAAKC,UAAU,SAAf,SACA,eAAC,EAAD,WACE,cAACb,EAAD,UACE,cAAC,IAAD,CAAMc,GAAG,IAAIC,QAAS,WACpBH,GAAW,GACXF,GAAU,IAFZ,uBAIF,eAACR,EAAD,WACGO,EAAS,cAAC,EAAD,CAAQM,QAAS,kBAAML,GAAWD,IAASO,GAAIC,IAAMH,GAAG,kBAAxD,yBAAkG,KAC3GL,EAAS,cAAC,EAAD,CAAQO,GAAIC,IAAMH,GAAG,UAAUC,QAAS,kBAAML,GAAWD,IAAzD,sBAAuF,KAC/FE,EAMc,KANJ,cAAC,EAAD,CAAQI,QAAS,WAC3BH,GAAYD,GACZD,GAAU,IAFA,SAIR,cAAC,IAAD,CAASQ,KAAK,UAAUC,KAAK,MAAMN,UAAU,UAAUjC,MAAM,gBAGhE+B,EAAU,cAAC,EAAD,CAAQK,GAAIC,IAAMH,GAAG,kBAAkBC,QAAS,kBAAMH,GAAYD,IAAlE,4BAAsG,KAChHA,EAAU,cAAC,EAAD,CAAQK,GAAIC,IAAMH,GAAG,eAAeC,QAAS,kBAAMH,GAAYD,IAA/D,yBAAgG,KACzGF,EAMc,KANL,cAAC,EAAD,CAAQM,QAAS,WAC1BL,GAAWD,GACXG,GAAW,IAFF,SAIP,cAAC,IAAD,CAAQM,KAAK,UAAUC,KAAK,MAAMN,UAAU,UAAUjC,MAAM,gBAGhE,cAAC,EAAD,CAAQD,QAAQ,OAAOoC,QAtC7B,WACEK,MAAM,UAAW,CAAEC,OAAQ,WAAYC,MAAK,SAACC,GACvCA,EAAEC,IACJlB,EAAQ,UAmCR,6BCoBOmB,MAlEf,YAAiC,IAAZC,EAAW,EAAXA,QACnB,EAAgClB,mBAAS,IAAzC,mBAAOmB,EAAP,KAAiBC,EAAjB,KACA,EAAgCpB,mBAAS,IAAzC,mBAAOqB,EAAP,KAAiBC,EAAjB,KACA,EAA4BtB,mBAAS,IAArC,mBAAOuB,EAAP,KAAeC,EAAf,KACA,EAAkCxB,oBAAS,GAA3C,mBAAOyB,EAAP,KAAkBC,EAAlB,KA0BA,OACE,uBAAMC,SAzBR,SAAsBC,GACpBA,EAAEC,iBACFH,GAAa,GACbd,MAAM,SAAU,CACdC,OAAQ,OACRiB,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEd,WAAUE,eAChCP,MAAK,SAACC,GACPW,GAAa,GACTX,EAAEC,GACJD,EAAEmB,OAAOpB,MAAK,SAACjB,GAAD,OAAUqB,EAAQrB,MAEhCkB,EAAEmB,OAAOpB,MAAK,SAACqB,GACbC,QAAQC,IAAIF,GACZX,EAAUW,EAAIG,cASpB,UACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAOC,QAAQ,WAAf,sBACA,cAAC,EAAD,CACEC,KAAK,OACLC,GAAG,WACHC,aAAa,MACbC,MAAOxB,EACPyB,SAAU,SAAChB,GAAD,OAAOR,EAAYQ,EAAEiB,OAAOF,aAG1C,eAAC,EAAD,WACE,cAAC,EAAD,CAAOJ,QAAQ,WAAf,sBACA,cAAC,EAAD,CACEC,KAAK,WACLC,GAAG,WACHC,aAAa,mBACbC,MAAOtB,EACPuB,SAAU,SAAChB,GAAD,OAAON,EAAYM,EAAEiB,OAAOF,aAG1C,cAAC,EAAD,UACE,cAAC,EAAD,CAAQxE,QAAQ,OAAOC,MAAM,UAAUoE,KAAK,SAA5C,SACGf,EAAY,aAAe,YAGhC,cAAC,EAAD,UACGF,EAAOuB,KAAI,SAACX,GAAD,OACV,cAAC,EAAD,UAAkBA,GAANA,YCsCPY,I,MAAAA,GAjGf,YAAkC,IAAZ7B,EAAW,EAAXA,QACpB,EAAgClB,mBAAS,IAAzC,mBAAOmB,EAAP,KAAiBC,EAAjB,KACA,EAAgCpB,mBAAS,IAAzC,mBAAOqB,EAAP,KAAiBC,EAAjB,KACA,EAAwDtB,mBAAS,IAAjE,mBAAOgD,EAAP,KAA6BC,EAA7B,KACA,EAAgCjD,mBAAS,IAAzC,mBAAOkD,EAAP,KAAiBC,EAAjB,KACA,EAAsBnD,mBAAS,IAA/B,mBAAOoD,EAAP,KAAYC,EAAZ,KACA,EAA4BrD,mBAAS,IAArC,mBAAOuB,EAAP,KAAeC,EAAf,KACA,EAAkCxB,oBAAS,GAA3C,mBAAOyB,EAAP,KAAkBC,EAAlB,KA4BA,OACE,uBAAMC,SA3BR,SAAsBC,GACpBA,EAAEC,iBACFL,EAAU,IACVE,GAAa,GACbd,MAAM,UAAW,CACfC,OAAQ,OACRiB,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBd,WACAE,WACAiC,sBAAuBN,EACvBO,UAAWL,EACXE,UAEDtC,MAAK,SAACC,GACPW,GAAa,GACTX,EAAEC,GACJD,EAAEmB,OAAOpB,MAAK,SAACjB,GAAD,OAAUqB,EAAQrB,MAEhCkB,EAAEmB,OAAOpB,MAAK,SAACqB,GAAD,OAASX,EAAUW,EAAIZ,eAMzC,UACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAOgB,QAAQ,WAAf,sBACA,cAAC,EAAD,CACEC,KAAK,OACLC,GAAG,WACHC,aAAa,MACbC,MAAOxB,EACPyB,SAAU,SAAChB,GAAD,OAAOR,EAAYQ,EAAEiB,OAAOF,aAG1C,eAAC,EAAD,WACE,cAAC,EAAD,CAAOJ,QAAQ,WAAf,sBACA,cAAC,EAAD,CACEC,KAAK,WACLC,GAAG,WACHE,MAAOtB,EACPuB,SAAU,SAAChB,GAAD,OAAON,EAAYM,EAAEiB,OAAOF,QACtCD,aAAa,wBAGjB,eAAC,EAAD,WACE,cAAC,EAAD,CAAOH,QAAQ,WAAf,mCACA,cAAC,EAAD,CACEC,KAAK,WACLC,GAAG,wBACHE,MAAOK,EACPJ,SAAU,SAAChB,GAAD,OAAOqB,EAAwBrB,EAAEiB,OAAOF,QAClDD,aAAa,wBAGjB,eAAC,EAAD,WACE,cAAC,EAAD,CAAOH,QAAQ,WAAf,2BACA,cAAC,EAAD,CACEC,KAAK,OACLC,GAAG,WACHE,MAAOO,EACPN,SAAU,SAAChB,GAAD,OAAOuB,EAAYvB,EAAEiB,OAAOF,aAG1C,eAAC,EAAD,WACE,cAAC,EAAD,CAAOJ,QAAQ,MAAf,iBACA,cAAC,EAAD,CACEiB,KAAK,IACLf,GAAG,MACHE,MAAOS,EACPR,SAAU,SAAChB,GAAD,OAAOyB,EAAOzB,EAAEiB,OAAOF,aAGrC,cAAC,EAAD,UACE,cAAC,EAAD,CAAQH,KAAK,SAAb,SAAuBf,EAAY,aAAe,cAEpD,cAAC,EAAD,UACGF,EAAOuB,KAAI,SAACX,GAAD,OACV,cAAC,EAAD,UAAkBA,GAANA,YCpDtB,I,SAAM3C,GAAOhC,IAAOiC,GAAV,kIAOJX,GAAUtB,IAAOiG,QAAV,yFAMPC,GAAUlG,IAAOmG,GAAV,kGAMEC,GAtDf,YAA6B,IAAZ1C,EAAW,EAAXA,QACf,EAAkClB,oBAAS,GAA3C,mBAAO6D,EAAP,KAAkBC,EAAlB,KAEA,OACE,eAAC,GAAD,WACE,cAAC,GAAD,sBACCD,EACC,qCACE,+CACA,cAAC,EAAD,CAAW3C,QAASA,IACpB,cAACwC,GAAD,IACA,4DAEE,cAAC,EAAD,CAAQtF,MAAM,YAAYmC,QAAS,kBAAMuD,GAAa,IAAtD,2BAMJ,qCACA,uDACE,cAAC,GAAD,CAAY5C,QAASA,IACrB,cAACwC,GAAD,IACA,8DAEE,cAAC,EAAD,CAAQtF,MAAM,YAAYmC,QAAS,kBAAMuD,GAAa,IAAtD,8B,kBC8BGC,I,MAxDA,WACb,MAAoC/D,mBAAS,IAA7C,mBAAOgE,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRtD,MAAM,UACLE,MAAK,SAAAqD,GAAG,OAAIA,EAAIjC,UAChBpB,MAAK,SAAAsD,GACJhC,QAAQC,IAAI+B,GACZH,EAAcG,QACf,CAACJ,IA+BJ,OACE,qBAAK3D,UAAU,mBAAf,SACQ,cAAC,KAAD,CACAoC,GAAG,SAAS4B,SAAS,SAASC,WAAYN,EAAYO,kBAhCtC,SAACC,GACzBpC,QAAQC,IAAImC,GACa,eAArBA,EAAMC,YACV7D,MAAM,UAAD,OAAW4D,EAAME,eAAe,GAAGjC,IAAM,CAC5C5B,OAAQ,QACRiB,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUuC,EAAME,eAAe,MAE3C5D,MAAK,SAAAqD,GAAG,OAAIA,EAAIjC,UAChBpB,MAAK,SAAAsD,OAEwB,eAArBI,EAAMC,cACfrC,QAAQC,IAAI,SACZD,QAAQC,IAAImC,EAAMG,eAAe,GAAGlC,IACpC7B,MAAM,UAAD,OAAW4D,EAAMG,eAAe,GAAGlC,IAAM,CAC5C5B,OAAQ,SACRiB,QAAS,CAAC,eAAgB,wBAepB8C,aAAc,CAAEC,aAAc,UAAWC,YAAa,QAASC,SAAU,WAAYC,aAAc,QAASC,iBAAkB,CAAEZ,SAAU,gBAAiBa,cAAc,GAFzK,SAGI,eAAC,KAAD,WACE,cAAC,KAAD,CAAiBC,WAAW,QAAQd,SAAS,SAC7C,cAAC,KAAD,CAAiBc,WAAW,cAAcd,SAAS,eACnD,cAAC,KAAD,CAAiBc,WAAW,UAAUd,SAAS,YAC/C,cAAC,KAAD,CAAiBc,WAAW,OAAOd,SAAS,mBCsD/Ce,GAxGI,SAAC,GAAc,IAAZvF,EAAW,EAAXA,KAEpB,EAA0BG,mBAAS,IAAnC,mBAAOqF,EAAP,KAAcC,EAAd,KACA,EAA4BtF,mBAAS,IAArC,mBAAOuF,EAAP,KAAeC,EAAf,KACA,EAA8BxF,mBAAS,IAAvC,mBAAOyF,EAAP,KAAgBC,EAAhB,KACA,EAAgC1F,mBAAS,IAAzC,mBAAO+E,EAAP,KAAiBY,EAAjB,KACA,EAA4B3F,mBAAS,IAArC,mBAAOuB,EAAP,KACA,GADA,KACgCvB,mBAAS,KAAzC,mBAAO4F,EAAP,KAAiBC,EAAjB,KACA,EAAwC7F,mBAAS,GAAjD,mBAAO8F,EAAP,KAAqBC,EAArB,KAEMC,EAAWC,cA0BjB/B,qBAAU,WACRtD,MAAM,aACLE,MAAK,SAAAC,GAAC,OAAIA,EAAEmB,UACZpB,MAAK,SAAAsD,GACJhC,QAAQC,IAAI+B,GACZyB,EAAYzB,QAEb,IAGL,IAAM8B,EAAiBN,EAAS9C,KAAI,SAAAqD,GAClC,OAAO,wBAAyBxD,MAAOwD,EAAQ1D,GAAxC,SAA6C0D,EAAQd,OAAxCc,EAAQ1D,OAI5B,OAFAL,QAAQC,KAAK6D,GAGX,gCACE,mDACA,uBAAMvE,SA1CS,SAACC,GACpBA,EAAEC,iBACF,IAAMuE,EAAO,CACXf,QACAE,SACAE,UACAV,WACAsB,QAASxG,EAAK4C,GACd6D,WAAYR,GAGdlF,MAAM,SAAU,CACdC,OAAQ,OACRiB,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUmE,KACpBtF,MAAK,SAAAC,GAAC,OAAIA,EAAEmB,UACdpB,MAAK,SAAAsD,GACJ4B,EAAS,QAIX5D,QAAQC,IAAI+D,IAqBR,UACA,eAAC,EAAD,WACI,cAAC,EAAD,CAAO7D,QAAQ,QAAf,mBACA,cAAC,EAAD,CAAOC,KAAK,OAAO+D,UAAQ,EAAC9D,GAAG,QAAQC,aAAa,MAAMC,MAAO0C,EAAOzC,SAAU,SAAChB,GAAD,OAAO0D,EAAS1D,EAAEiB,OAAOF,aAE7G,eAAC,EAAD,WACE,cAAC,EAAD,CAAOJ,QAAQ,SAAf,sBACA,eAAC,EAAD,CAAQI,MAAOmD,EAAclD,SAAU,SAAChB,GAAD,OAAOmE,EAAgBnE,EAAEiB,OAAOF,QAAvE,UACE,wBAAQA,MAAO,EAAf,4BACCuD,QAGL,eAAC,EAAD,WACE,cAAC,EAAD,CAAO3D,QAAQ,SAAf,oBACA,eAAC,EAAD,CAAQI,MAAO4C,EAAQ3C,SAAU,SAAChB,GAAD,OAAO4D,EAAU5D,EAAEiB,OAAOF,QAA3D,UACM,wBAAQA,MAAM,GAAd,2BACA,wBAAQA,MAAM,OAAd,mBACA,wBAAQA,MAAM,aAAd,yBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,wBAGR,eAAC,EAAD,WACE,cAAC,EAAD,CAAOJ,QAAQ,UAAf,qBACA,cAAC,EAAD,CAAUiB,KAAK,IAAIhB,KAAK,OAAQC,GAAG,QAAQC,aAAa,MAAMC,MAAO8C,EAAS7C,SAAU,SAAChB,GAAD,OAAO8D,EAAW9D,EAAEiB,OAAOF,aAErH,eAAC,EAAD,WACE,cAAC,EAAD,CAAOJ,QAAQ,WAAf,sBACA,eAAC,EAAD,CAAQI,MAAOoC,EAAUnC,SAAU,SAAChB,GAAD,OAAO+D,EAAY/D,EAAEiB,OAAOF,QAA/D,UACM,wBAAQA,MAAM,GAAd,6BACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,4BAGR,cAAC,EAAD,UACE,cAAC,EAAD,CAAQxE,QAAQ,OAAOC,MAAM,UAAUoE,KAAK,SAA5C,sBAIF,cAAC,EAAD,UACGjB,EAAOuB,KAAI,SAACX,GAAD,OACV,cAAC,EAAD,UAAkBA,GAANA,eCrFX3E,IAAOiC,GAAV,iIAAV,I,SAOMX,GAAUtB,IAAOiG,QAAV,2FAYE+C,IANChJ,IAAOmG,GAAV,oGAtBb,YAA0B,IAAR9D,EAAO,EAAPA,KAEhB,OACE,cAAC,GAAD,UACM,cAAC,GAAD,CAAYA,KAAMA,QC2Db4G,GAjEO,SAAC,GAAc,IAAZ5G,EAAW,EAAXA,KAEvB,EAA0BG,mBAAS,IAAnC,mBAAOqF,EAAP,KAAcC,EAAd,KACA,EAA8BtF,mBAAS,IAAvC,mBAAOyF,EAAP,KAAgBC,EAAhB,KACA,EAA0B1F,mBAAS,IAAnC,mBAAO5B,EAAP,KAAcsI,EAAd,KACA,EAA4B1G,mBAAS,IAArC,mBAAOuB,EAAP,KAEMyE,GAFN,KAEiBC,eAqBjB,OACE,gCACE,sDACA,uBAAMtE,SAtBS,SAACC,GACpBA,EAAEC,iBACF,IAAMsE,EAAU,CACdd,QACAI,UACArH,QACAiI,QAASxG,EAAK4C,IAGhB7B,MAAM,YAAa,CACjBC,OAAQ,OACRiB,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUkE,KACpBrF,MAAK,SAAAC,GAAC,OAAIA,EAAEmB,UACdpB,MAAK,SAAAsD,GACJhC,QAAQC,IAAI+B,GACZ4B,EAAS,SAMP,UACA,eAAC,EAAD,WACI,cAAC,EAAD,CAAOzD,QAAQ,QAAf,mBACA,cAAC,EAAD,CAAOC,KAAK,OAAO+D,UAAQ,EAAC9D,GAAG,QAAQC,aAAa,MAAMC,MAAO0C,EAAOzC,SAAU,SAAChB,GAAD,OAAO0D,EAAS1D,EAAEiB,OAAOF,aAE7G,eAAC,EAAD,WACE,cAAC,EAAD,CAAOJ,QAAQ,gBAAf,mBACA,eAAC,EAAD,CAAQI,MAAOvE,EAAOwE,SAAU,SAAChB,GAAD,OAAO8E,EAAS9E,EAAEiB,OAAOF,QAAzD,UACM,wBAAQA,MAAM,GAAd,0BACA,wBAAQA,MAAM,UAAd,mBACA,wBAAQA,MAAM,UAAd,kBACA,wBAAQA,MAAM,UAAd,oBACA,wBAAQA,MAAM,UAAd,yBAGP,eAAC,EAAD,WACC,cAAC,EAAD,CAAOJ,QAAQ,UAAf,qBACA,cAAC,EAAD,CAAUiB,KAAK,IAAIhB,KAAK,OAAQC,GAAG,QAAQC,aAAa,MAAMC,MAAO8C,EAAS7C,SAAU,SAAChB,GAAD,OAAO8D,EAAW9D,EAAEiB,OAAOF,aAEtH,cAAC,EAAD,UACG,cAAC,EAAD,CAAQxE,QAAQ,OAAOC,MAAM,UAAUoE,KAAK,SAA5C,sBAIF,cAAC,EAAD,UACGjB,EAAOuB,KAAI,SAACX,GAAD,OACV,cAAC,EAAD,UAAkBA,GAANA,eC9CX3E,IAAOiC,GAAV,iIAAV,I,SAOMX,GAAUtB,IAAOiG,QAAV,2FAYEkD,IANCnJ,IAAOmG,GAAV,oGAtBb,YAA8B,IAAR9D,EAAO,EAAPA,KAEpB,OACE,cAAC,GAAD,UACM,cAAC,GAAD,CAAeA,KAAMA,Q,QCmDhB+G,GAvDO,WACpB,MAAkC5G,mBAAS,IAA3C,mBAAO6G,EAAP,KAAkBC,EAAlB,KACA,EAA0B9G,mBAAS,IAAnC,mBAAOqF,EAAP,KAAcC,EAAd,KACMU,EAAWC,cAEXC,EAAiBW,EAAU/D,KAAI,SAAAsD,GACnC,OAAO,wBAAQzD,MAAOyD,EAAK3D,GAApB,SAAuC2D,EAAKf,OAAfe,EAAK3D,OAG3CyB,qBAAU,WACRtD,MAAM,aACHE,MAAK,SAAAqD,GAAG,OAAIA,EAAIjC,UAChBpB,MAAK,SAAAsD,GACJhC,QAAQC,IAAI+B,GACZ0C,EAAa1C,QAEhB,IAeH,OACE,gCACE,gDACA,eAAC,EAAD,WACI,cAAC,EAAD,CAAO7B,QAAQ,SAAf,sBACA,eAAC,EAAD,CAAQI,MAAO0C,EAAOzC,SAAU,SAAChB,GAAD,OAAO0D,EAAS1D,EAAEiB,OAAOF,QAAzD,UACE,wBAAQA,MAAO,EAAf,4BACCuD,QAGP,cAAC,EAAD,UACE,cAAC,EAAD,CAAQ/H,QAAQ,OAAOC,MAAM,UAAUoE,KAAK,SAASjC,QAxBtC,SAACqB,GACpBA,EAAEC,iBACFO,QAAQC,IAAIgD,GACZzE,MAAM,aAAD,OAAcyE,GAAS,CAC1BxE,OAAQ,SACRiB,QAAS,CAAC,eAAgB,sBACzBhB,MAAK,SAAAqD,GAAG,OAAIA,EAAIjC,UAClBpB,MAAK,SAAAsD,GACJhC,QAAQC,IAAI+B,GACZ4B,EAAS,SAeP,sBAIF,cAAC,EAAD,QCnCOxI,IAAOiC,GAAV,iIAAV,I,SAOMX,GAAUtB,IAAOiG,QAAV,2FAYEsD,IANCvJ,IAAOmG,GAAV,oGAtBb,YAAqC,IAAR9D,EAAO,EAAPA,KAE3B,OACE,cAAC,GAAD,UACM,cAAC,GAAD,CAAeA,KAAMA,QC8ChBmH,GApDI,WACjB,MAAkChH,mBAAS,IAA3C,mBAAO6G,EAAP,KAAkBC,EAAlB,KACA,EAA0B9G,mBAAS,IAAnC,mBAAOqF,EAAP,KAAcC,EAAd,KACMU,EAAWC,cAEXC,EAAiBW,EAAU/D,KAAI,SAAAsD,GACnC,OAAO,wBAAQzD,MAAOyD,EAAK3D,GAApB,SAAuC2D,EAAKf,OAAfe,EAAK3D,OAG3CyB,qBAAU,WACRtD,MAAM,UACHE,MAAK,SAAAqD,GAAG,OAAIA,EAAIjC,UAChBpB,MAAK,SAAAsD,GAAI,OAAI0C,EAAa1C,QAC5B,IAeH,OACE,gCACE,6CACA,eAAC,EAAD,WACI,cAAC,EAAD,CAAO7B,QAAQ,SAAf,mBACA,eAAC,EAAD,CAAQI,MAAO0C,EAAOzC,SAAU,SAAChB,GAAD,OAAO0D,EAAS1D,EAAEiB,OAAOF,QAAzD,UACE,wBAAQA,MAAO,EAAf,4BACCuD,QAGP,cAAC,EAAD,UACE,cAAC,EAAD,CAAQ/H,QAAQ,OAAOC,MAAM,UAAUoE,KAAK,SAASjC,QAxBtC,SAACqB,GACpBA,EAAEC,iBACFO,QAAQC,IAAIgD,GACZzE,MAAM,UAAD,OAAWyE,GAAS,CACvBxE,OAAQ,SACRiB,QAAS,CAAC,eAAgB,sBACzBhB,MAAK,SAAAqD,GAAG,OAAIA,EAAIjC,UAClBpB,MAAK,SAAAsD,GACJhC,QAAQC,IAAI+B,GACZ4B,EAAS,SAeP,sBAIF,cAAC,EAAD,QClCOxI,IAAOiC,GAAV,iIAAV,IAOMX,GAAUtB,IAAOiG,QAAV,2FAYEwD,IANCzJ,IAAOmG,GAAV,oGAtBb,YAAkC,IAAR9D,EAAO,EAAPA,KAExB,OACE,cAAC,GAAD,UACM,cAAC,GAAD,CAAYA,KAAMA,QCK5BqH,aAAgB,wFAqCDC,I,GAAAA,GAlCf,WAEE,MAAwBnH,mBAAS,MAAjC,mBAAOH,EAAP,KAAaC,EAAb,KAWA,OATAoE,qBAAU,WAERtD,MAAM,OAAOE,MAAK,SAACC,GACbA,EAAEC,IACJD,EAAEmB,OAAOpB,MAAK,SAACjB,GAAD,OAAUC,EAAQD,WAGnC,IAEEA,EAKH,sBAAKQ,UAAU,MAAf,UACA,cAAC,EAAD,CAAQR,KAAMA,EAAMC,QAASA,IAC7B,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsH,KAAK,IAAIC,OAAK,EAACC,QAAS,cAAC,GAAD,MAC/B,cAAC,IAAD,CAAOF,KAAK,UAAUE,QAAS,cAAC,GAAD,CAAQzH,KAAMA,MAC7C,cAAC,IAAD,CAAOuH,KAAK,kBAAkBE,QAAS,cAAC,GAAD,CAAYzH,KAAMA,MACzD,cAAC,IAAD,CAAOuH,KAAK,kBAAkBE,QAAS,cAAC,GAAD,CAAezH,KAAMA,MAC5D,cAAC,IAAD,CAAOuH,KAAK,eAAeE,QAAS,cAAC,GAAD,CAAYzH,KAAMA,cAb1C,cAAC,GAAD,CAAOqB,QAASpB,KCnBrByH,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3G,MAAK,YAAkD,IAA/C4G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCRO,I,MAAcC,YAAH,+TAgBjBC,IAASC,OACP,eAAC,IAAD,WACE,cAACH,GAAD,IACA,cAAC,GAAD,OAEFI,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.35a0019e.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Box = styled.div`\n  border-radius: 6px;\n  box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%),\n    0 0 0 1px rgb(10 10 10 / 2%);\n  padding: 16px;\n`;\n\nexport default Box;\n","import styled from \"styled-components\";\n\nconst COLORS = {\n  primary: {\n    \"--main\": \"black\",\n    \"--accent\": \"goldenrod\",\n  },\n  secondary: {\n    \"--main\": \"goldenrod\",\n    \"--accent\": \"black\",\n  },\n};\n\nfunction Button({ variant = \"fill\", color = \"primary\", ...props }) {\n  let Component;\n  if (variant === \"fill\") {\n    Component = FillButton;\n  } else if (variant === \"outline\") {\n    Component = OutlineButton;\n  }\n\n  return <Component style={COLORS[color]} {...props} />;\n}\n\nconst ButtonBase = styled.button`\n  cursor: pointer;\n  font-size: 1rem;\n  border: 1px solid transparent;\n  border-radius: 6px;\n  padding: 8px 16px;\n  text-decoration: none;\n  margin-right: 8px;\n`;\n\nconst FillButton = styled(ButtonBase)`\n  background-color: var(--main);\n  color: var(--accent);\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst OutlineButton = styled(ButtonBase)`\n  background-color: white;\n  color: var(--main);\n  border: 2px solid var(--main);\n\n  &:hover {\n    background: hsl(235deg 85% 97%);\n  }\n`;\n\nexport default Button;\n","import styled from \"styled-components\";\n\nconst FormField = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n\nexport default FormField;\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n  border-radius: 6px;\n  border: 1px solid transparent;\n  border-color: #dbdbdb;\n  -webkit-appearance: none;\n  max-width: 100%;\n  width: 100%;\n  font-size: 1rem;\n  line-height: 1.5;\n  padding: 4px;\n`;\n\nexport default Input;\n","import styled from \"styled-components\";\n\nconst Label = styled.label`\n  color: #363636;\n  display: block;\n  font-size: 1rem;\n  font-weight: 700;\n  margin-bottom: 8px;\n`;\n\nexport default Label;\n","import styled from \"styled-components\";\n\nconst Textarea = styled.textarea`\n  border-radius: 6px;\n  border: 1px solid transparent;\n  border-color: #dbdbdb;\n  -webkit-appearance: none;\n  max-width: 100%;\n  width: 100%;\n  font-size: 1rem;\n  line-height: 1.5;\n  padding: 4px;\n  resize: none;\n`;\n\nexport default Textarea;\n","import styled from \"styled-components\";\n\nfunction Error({ children }) {\n  return (\n    <Wrapper>\n      <Alert>!</Alert>\n      <Message>{children}</Message>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  color: red;\n  background-color: mistyrose;\n  border-radius: 6px;\n  display: flex;\n  padding: 8px;\n  align-items: center;\n  gap: 8px;\n  margin: 8px 0;\n`;\n\nconst Alert = styled.span`\n  background-color: white;\n  height: 30px;\n  width: 30px;\n  border-radius: 50%;\n  font-weight: bold;\n  display: grid;\n  place-content: center;\n`;\n\nconst Message = styled.p`\n  margin: 0;\n`;\n\nexport default Error;\n","import styled from \"styled-components\";\n\nconst Select = styled.select`\n  border-radius: 6px;\n  border: 1px solid transparent;\n  border-color: #dbdbdb;\n  -webkit-appearance: none;\n  max-width: 100%;\n  width: 100%;\n  font-size: 1rem;\n  line-height: 1.5;\n  padding: 4px;\n`;\n\nexport default Select;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Button } from \"../styles\";\nimport '../App.css';\nimport { FaGhost, FaPlus } from \"react-icons/fa\";\n\n\n\n\nfunction NavBar({ user, setUser }) {\n  function handleLogoutClick() {\n    fetch(\"/logout\", { method: \"DELETE\" }).then((r) => {\n      if (r.ok) {\n        setUser(null);\n      }\n    });\n  }\n\n  const [isShow, setIsShow] = React.useState(false);\n  const [isMinus, setIsMinus] = React.useState(false);\n\n  return (\n    <div className=\"navbar\">\n    <Wrapper>\n      <Logo >\n        <Link to=\"/\" onClick={() => {\n          setIsMinus(false) \n          setIsShow(false)}}>Taskify</Link>\n      </Logo>\n      <Nav>\n        {isShow ? <Button onClick={() => setIsShow(!isShow)} as={Link} to='/create-project' >New Project</Button> : null}\n        {isShow ? <Button as={Link} to='/create' onClick={() => setIsShow(!isShow)} >New Task</Button> : null}\n        {!isMinus ? <Button onClick={() => {\n          setIsMinus(!isMinus)\n          setIsShow(false)\n          }}>\n            <FaGhost icon=\"flipper\" size=\"1em\" className=\"flipper\" color=\"goldenrod\"/>\n            \n            </Button> : null}\n        {isMinus ? <Button as={Link} to='/delete-project' onClick={() => setIsMinus(!isMinus)}>Delete Project</Button> : null}\n        {isMinus ? <Button as={Link} to='/delete-task' onClick={() => setIsMinus(!isMinus)}>Delete Task</Button> : null}\n        {!isShow ? <Button onClick={() => {\n          setIsShow(!isShow)\n          setIsMinus(false)\n          }}>\n            <FaPlus icon=\"flipper\" size=\"1em\" className=\"spinner\" color=\"goldenrod\"/>\n            \n            </Button> : null}\n        <Button variant=\"fill\" onClick={handleLogoutClick}>\n          Logout\n        </Button>\n      </Nav>\n    </Wrapper>\n    </div>\n  );\n}\n\n\n\n\nconst Wrapper = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px;\n`;\n\nconst Logo = styled.h1`\n  font-family: 'Roboto', sans-serif;\n  font-size: 3rem;\n  color: goldenrod;\n  margin: 0;\n  line-height: 2;\n\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n`;\n\nconst Nav = styled.nav`\n  display: flex;\n  gap: 4px;\n  position: absolute;\n  right: 8px;\n`;\n\nexport default NavBar;\n","import React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label } from \"../styles\";\n\nfunction LoginForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user));\n      } else {\n        r.json().then((err) => {\n          console.log(err)\n          setErrors(err.error)\n        }\n        )\n          \n      }\n    })\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormField>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Button variant=\"fill\" color=\"primary\" type=\"submit\">\n          {isLoading ? \"Loading...\" : \"Login\"}\n        </Button>\n      </FormField>\n      <FormField>\n        {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))}\n      </FormField>\n    </form>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label, Textarea } from \"../styles\";\n\nfunction SignUpForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setErrors([]);\n    setIsLoading(true);\n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password_confirmation: passwordConfirmation,\n        image_url: imageUrl,\n        bio,\n      }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormField>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password Confirmation</Label>\n        <Input\n          type=\"password\"\n          id=\"password_confirmation\"\n          value={passwordConfirmation}\n          onChange={(e) => setPasswordConfirmation(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"imageUrl\">Profile Image</Label>\n        <Input\n          type=\"text\"\n          id=\"imageUrl\"\n          value={imageUrl}\n          onChange={(e) => setImageUrl(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"bio\">Bio</Label>\n        <Textarea\n          rows=\"3\"\n          id=\"bio\"\n          value={bio}\n          onChange={(e) => setBio(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Button type=\"submit\">{isLoading ? \"Loading...\" : \"Sign Up\"}</Button>\n      </FormField>\n      <FormField>\n        {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))}\n      </FormField>\n    </form>\n  );\n}\n\nexport default SignUpForm;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport LoginForm from \"../components/LoginForm\";\nimport SignUpForm from \"../components/SignUpForm\";\nimport { Button } from \"../styles\";\n\nfunction Login({ onLogin }) {\n  const [showLogin, setShowLogin] = useState(true);\n\n  return (\n    <Wrapper>\n      <Logo>Taskify</Logo>\n      {showLogin ? (\n        <>\n          <h1>Welcome Back!</h1>\n          <LoginForm onLogin={onLogin} />\n          <Divider />\n          <p>\n            Don't have an account? &nbsp;\n            <Button color=\"secondary\" onClick={() => setShowLogin(false)}>\n              Sign Up\n            </Button>\n          </p>\n        </>\n      ) : (\n        <>\n        <h1>Pleasure To Meet You!</h1>\n          <SignUpForm onLogin={onLogin} />\n          <Divider />\n          <p>\n            Already have an account? &nbsp;\n            <Button color=\"secondary\" onClick={() => setShowLogin(true)}>\n              Log In\n            </Button>\n          </p>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nconst Logo = styled.h1`\n  font-family: 'Jost', sans-serif;\n  font-size: 3.5rem;\n  color: goldenrod;\n  margin: 8px 0 16px;\n`;\n\nconst Wrapper = styled.section`\n  max-width: 500px;\n  margin: 40px auto;\n  padding: 16px;\n`;\n\nconst Divider = styled.hr`\n  border: none;\n  border-bottom: 1px solid #ccc;\n  margin: 16px 0;\n`;\n\nexport default Login;\n","\nimport React, { useState, useEffect } from 'react'\nimport { KanbanComponent, ColumnsDirective, ColumnDirective } from \"@syncfusion/ej2-react-kanban\";\nimport './Kanban.css'\n\nconst KanBan = () => {\n  const [kanbanData, setKanbanData] = useState([]);\n\n  useEffect(() => {\n    fetch('/tasks')\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n      setKanbanData(data)})\n  }, [kanbanData])\n\n  const dataSourceChanged = (state: any) => {\n    console.log(state)\n    if (state.requestType == 'cardChanged') { \n    fetch(`/tasks/${state.changedRecords[0].id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(state.changedRecords[0])\n    })\n    .then(res => res.json())\n    .then(data => {\n    })\n  } else if (state.requestType == 'cardRemoved'){\n    console.log(\"Hello\")\n    console.log(state.deletedRecords[0].id)\n    fetch(`/tasks/${state.deletedRecords[0].id}`, {\n      method: 'DELETE',\n      headers: {\"Content-Type\": \"application/json\"}\n    })\n  }\n\n\n  }\n\n\n  \n\n  \n  return (\n    <div className='kanban-container'>\n            <KanbanComponent \n            id=\"kanban\" keyField=\"status\" dataSource={kanbanData} dataSourceChanged={dataSourceChanged} \n            cardSettings={{ contentField: \"summary\", headerField: \"title\", priority: \"priority\", grabberField: 'blue' }}swimlaneSettings={{ keyField: \"project_title\", showEmptyRow: true}}>\n                <ColumnsDirective>\n                  <ColumnDirective headerText=\"To Do\" keyField=\"open\"/>\n                  <ColumnDirective headerText=\"In Progress\" keyField=\"InProgress\"/>\n                  <ColumnDirective headerText=\"Testing\" keyField=\"testing\"/>\n                  <ColumnDirective headerText=\"Done\" keyField=\"close\"/>\n                </ColumnsDirective>\n            </KanbanComponent>\n    </div>\n  )\n}\n\nexport default KanBan","import React, {useState, useEffect} from 'react'\nimport { Button, Error, Input, FormField, Label, Select, Textarea } from \"../styles\";\nimport { useNavigate } from 'react-router-dom';\n\nconst CreateForm = ({ user }) => {\n  \n  const [title, setTitle] = useState('');\n  const [status, setStatus] = useState('');\n  const [summary, setSummary] = useState('');\n  const [priority, setPriority] = useState('');\n  const [errors, setErrors] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [projectNames, setProjectNames] = useState(0);\n\n  const navigate = useNavigate();\n\nconst handleSubmit = (e) => {\n  e.preventDefault()\n  const task = { \n    title, \n    status, \n    summary, \n    priority,\n    user_id: user.id,\n    project_id: projectNames\n   };\n\n  fetch('/tasks', {\n    method: 'POST',\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(task)\n  }).then(r => r.json())\n  .then(data => {\n    navigate('/')\n  })\n\n\n  console.log(task)\n}\n\n  useEffect(() => {\n    fetch('/projects')\n    .then(r => r.json())\n    .then(data => {\n      console.log(data)\n      setProjects(data)}\n    )\n  }, [])\n\n  \nconst projectOptions = projects.map(project => {\n  return <option key={project.id} value={project.id}>{project.title}</option>})\n\n  console.log(!projectOptions)\n\n  return (\n    <div>\n      <h1>Create a New Task</h1>\n      <form onSubmit={handleSubmit}>\n      <FormField>\n          <Label htmlFor=\"title\">Title</Label>\n          <Input type=\"text\" required id=\"title\" autoComplete=\"off\" value={title} onChange={(e) => setTitle(e.target.value)} />\n        </FormField>\n        <FormField>\n          <Label htmlFor=\"status\">Project:</Label>\n          <Select value={projectNames} onChange={(e) => setProjectNames(e.target.value)}>\n            <option value={0}>Select Project</option>\n            {projectOptions}\n            </Select>\n        </FormField>\n        <FormField>\n          <Label htmlFor=\"status\">Status</Label>\n          <Select value={status} onChange={(e) => setStatus(e.target.value)}>\n                <option value=\"\">Select Status</option>\n                <option value=\"open\">To Do</option>\n                <option value=\"InProgress\">In Progress</option>\n                <option value=\"testing\">Testing</option>\n                <option value=\"close\">Done</option>\n            </Select>\n        </FormField>\n        <FormField>\n          <Label htmlFor=\"summary\">Summary</Label>\n          <Textarea rows=\"3\" type=\"text\"  id=\"title\" autoComplete=\"off\" value={summary} onChange={(e) => setSummary(e.target.value)} />\n        </FormField>\n        <FormField>\n          <Label htmlFor=\"priority\">Priority</Label>\n          <Select value={priority} onChange={(e) => setPriority(e.target.value)}>\n                <option value=\"\">Select Priority</option>\n                <option value=\"Low\">Low</option>\n                <option value=\"Normal\">Normal</option>\n                <option value=\"Critical\">Critical</option>\n            </Select>\n        </FormField>\n        <FormField>\n          <Button variant=\"fill\" color=\"primary\" type=\"submit\">\n            Create\n          </Button>\n        </FormField>\n        <FormField>\n          {errors.map((err) => (\n            <Error key={err}>{err}</Error>\n          ))}\n        </FormField>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateForm","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport LoginForm from \"../components/LoginForm\";\nimport CreateForm from \"../components/CreateForm\";\nimport { Button } from \"../styles\";\n\nfunction Create({ user}) {\n\n  return (\n    <Wrapper>\n          <CreateForm user={user}/>\n    </Wrapper>\n  );\n}\n\nconst Logo = styled.h1`\n  font-family: \"Roboto\", cursive;\n  font-size: 3rem;\n  color: goldenrod;\n  margin: 8px 0 16px;\n`;\n\nconst Wrapper = styled.section`\n  max-width: 500px;\n  margin: 40px auto;\n  padding: 16px;\n`;\n\nconst Divider = styled.hr`\n  border: none;\n  border-bottom: 1px solid #ccc;\n  margin: 16px 0;\n`;\n\nexport default Create;\n","import React, {useState, useEffect} from 'react'\nimport { Button, Error, Input, FormField, Label, Select, Textarea } from \"../styles\";\nimport { useNavigate } from 'react-router-dom';\n\nconst CreateProject = ({ user }) => {\n  \n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [color, setColor] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  const navigate = useNavigate();\n\nconst handleSubmit = (e) => {\n  e.preventDefault()\n  const project = { \n    title,  \n    summary,\n    color,\n    user_id: user.id\n   };\n\n  fetch('/projects', {\n    method: 'POST',\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(project)\n  }).then(r => r.json())\n  .then(data => {\n    console.log(data)\n    navigate('/')\n  })\n}\n  return (\n    <div>\n      <h1>Create a New Project</h1>\n      <form onSubmit={handleSubmit}>\n      <FormField>\n          <Label htmlFor=\"title\">Title</Label>\n          <Input type=\"text\" required id=\"title\" autoComplete=\"off\" value={title} onChange={(e) => setTitle(e.target.value)} />\n        </FormField>\n        <FormField>\n          <Label htmlFor=\"Project Label\">Color</Label>\n          <Select value={color} onChange={(e) => setColor(e.target.value)}>\n                <option value=\"\">Pick a Color</option>\n                <option value=\"#99CC33\">Green</option>\n                <option value=\"#FF9999\">Pink</option>\n                <option value=\"#FFDF5E\">Yellow</option>\n                <option value=\"#BDAC96\">Brown</option>\n            </Select>\n        </FormField>\n         <FormField>\n          <Label htmlFor=\"summary\">Summary</Label>\n          <Textarea rows=\"3\" type=\"text\"  id=\"title\" autoComplete=\"off\" value={summary} onChange={(e) => setSummary(e.target.value)} />\n       </FormField>\n       <FormField>\n          <Button variant=\"fill\" color=\"primary\" type=\"submit\">\n            Create\n          </Button>\n        </FormField>\n        <FormField>\n          {errors.map((err) => (\n            <Error key={err}>{err}</Error>\n          ))}\n        </FormField>\n      </form>\n    </div>\n  )\n}\n\nexport default CreateProject","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport LoginForm from \"../components/LoginForm\";\nimport CreateProject from \"../components/CreateProject\";\nimport { Button } from \"../styles\";\n\nfunction NewProject({ user}) {\n\n  return (\n    <Wrapper>\n          <CreateProject user={user}/>\n    </Wrapper>\n  );\n}\n\nconst Logo = styled.h1`\n  font-family: \"Roboto\", cursive;\n  font-size: 3rem;\n  color: goldenrod;\n  margin: 8px 0 16px;\n`;\n\nconst Wrapper = styled.section`\n  max-width: 500px;\n  margin: 40px auto;\n  padding: 16px;\n`;\n\nconst Divider = styled.hr`\n  border: none;\n  border-bottom: 1px solid #ccc;\n  margin: 16px 0;\n`;\n\nexport default NewProject;\n","\nimport React, {useState, useEffect} from 'react'\nimport { Button, Error, Input, FormField, Label, Select, Textarea } from \"../styles\";\nimport { useNavigate } from 'react-router-dom';\n\n\nconst DeleteProject = () => {\n  const [taskNames, setTaskNames] = useState([]);\n  const [title, setTitle] = useState('');\n  const navigate = useNavigate();\n  \n  const projectOptions = taskNames.map(task => {\n    return <option value={task.id} key={task.id}>{task.title}</option>\n  })\n\n  useEffect(() => {\n    fetch('/projects')\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        setTaskNames(data)\n      })\n  }, [])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(title)\n    fetch(`/projects/${title}`, {\n      method: 'DELETE',\n      headers: {\"Content-Type\": \"application/json\"}\n    }).then(res => res.json())\n    .then(data => {\n      console.log(data)\n      navigate('/')\n    })\n  }\n  \n  return (\n    <div>  \n      <h1>Delete Project</h1>    \n      <FormField>\n          <Label htmlFor=\"status\">Project:</Label>\n          <Select value={title} onChange={(e) => setTitle(e.target.value)}>\n            <option value={0}>Select Project</option>\n            {projectOptions}\n            </Select>\n        </FormField>\n      <FormField>\n        <Button variant=\"fill\" color=\"primary\" type=\"submit\" onClick={handleSubmit}>\n          Delete\n        </Button>\n      </FormField>\n      <FormField>\n        {/* {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))} */}\n      </FormField>\n    </div>\n  )\n}\n\nexport default DeleteProject","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport LoginForm from \"../components/LoginForm\";\nimport DeleteProject from \"../components/DeleteProject\";\nimport { Button } from \"../styles\";\n\n\n\nfunction DeleteProjectPage({ user}) {\n\n  return (\n    <Wrapper>\n          <DeleteProject user={user}/>\n    </Wrapper>\n  );\n}\n\nconst Logo = styled.h1`\n  font-family: \"Roboto\", cursive;\n  font-size: 3rem;\n  color: goldenrod;\n  margin: 8px 0 16px;\n`;\n\nconst Wrapper = styled.section`\n  max-width: 500px;\n  margin: 40px auto;\n  padding: 16px;\n`;\n\nconst Divider = styled.hr`\n  border: none;\n  border-bottom: 1px solid #ccc;\n  margin: 16px 0;\n`;\n\nexport default DeleteProjectPage;","\nimport React, {useState, useEffect} from 'react'\nimport { Button, Error, Input, FormField, Label, Select, Textarea } from \"../styles\";\nimport { useNavigate } from 'react-router-dom';\n\n\nconst DeleteTask = () => {\n  const [taskNames, setTaskNames] = useState([]);\n  const [title, setTitle] = useState('');\n  const navigate = useNavigate();\n  \n  const projectOptions = taskNames.map(task => {\n    return <option value={task.id} key={task.id}>{task.title}</option>\n  })\n\n  useEffect(() => {\n    fetch('/tasks')\n      .then(res => res.json())\n      .then(data => setTaskNames(data))\n  }, [])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(title)\n    fetch(`/tasks/${title}`, {\n      method: 'DELETE',\n      headers: {\"Content-Type\": \"application/json\"}\n    }).then(res => res.json())\n    .then(data => {\n      console.log(data)\n      navigate('/')\n    })\n  }\n  \n  return (\n    <div>  \n      <h1>Delete Task</h1>    \n      <FormField>\n          <Label htmlFor=\"status\">Task:</Label>\n          <Select value={title} onChange={(e) => setTitle(e.target.value)}>\n            <option value={0}>Select Project</option>\n            {projectOptions}\n            </Select>\n        </FormField>\n      <FormField>\n        <Button variant=\"fill\" color=\"primary\" type=\"submit\" onClick={handleSubmit}>\n          Delete\n        </Button>\n      </FormField>\n      <FormField>\n        {/* {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))} */}\n      </FormField>\n    </div>\n  )\n}\n\nexport default DeleteTask","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport LoginForm from \"../components/LoginForm\";\nimport { Button } from \"../styles\";\nimport DeleteTask from \"../components/DeleteTask\";\n\nfunction DeleteTaskPage({ user}) {\n\n  return (\n    <Wrapper>\n          <DeleteTask user={user}/>\n    </Wrapper>\n  );\n}\n\nconst Logo = styled.h1`\n  font-family: \"Roboto\", cursive;\n  font-size: 3rem;\n  color: goldenrod;\n  margin: 8px 0 16px;\n`;\n\nconst Wrapper = styled.section`\n  max-width: 500px;\n  margin: 40px auto;\n  padding: 16px;\n`;\n\nconst Divider = styled.hr`\n  border: none;\n  border-bottom: 1px solid #ccc;\n  margin: 16px 0;\n`;\n\nexport default DeleteTaskPage;\n","\nimport React, { useEffect, useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Login from \"./pages/Login\";\nimport KanBan from './components/KanBan';\nimport Create from './pages/Create';\nimport NewProject from './pages/NewProject';\nimport { registerLicense } from '@syncfusion/ej2-base';\nimport './App.css';\nimport DeleteProject from './pages/DeleteProjectPage';\nimport DeleteTask from './pages/DeleteTaskPage';\n\n\n// Registering Syncfusion license key\nregisterLicense('ORg4AjUWIQA/Gnt2VVhhQlFaclhJXGFWfVJpTGpQdk5xdV9DaVZUTWY/P1ZhSXxRdkBhX35Yc3JQQmBUWEw=');\n\n\nfunction App() {\n\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // auto-login\n    fetch(\"/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    });\n  }, []);\n\n  if (!user) return <Login onLogin={setUser} />;\n\n\n  return (\n\n    <div className=\"app\">\n    <NavBar user={user} setUser={setUser} />\n    <main>\n      <Routes>\n        <Route path=\"/\" exact element={<KanBan/>}/>\n        <Route path=\"/create\" element={<Create user={user}/>}/>\n        <Route path=\"/create-project\" element={<NewProject user={user}/>}/>\n        <Route path=\"/delete-project\" element={<DeleteProject user={user}/>}/>\n        <Route path=\"/delete-task\" element={<DeleteTask user={user}/>}/>\n      </Routes>\n    </main>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createGlobalStyle } from \"styled-components\";\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::before, \n  *::after {\n    box-sizing: border-box;\n  }\n\n  html, body {\n    margin: 0;\n  }\n\n  body {\n    font-family: BlinkMacSystemFont,-apple-system,\"Segoe UI\",Roboto,Oxygen,Ubuntu,Cantarell,\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n  }\n`;\n\nReactDOM.render(\n  <BrowserRouter>\n    <GlobalStyle />\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}